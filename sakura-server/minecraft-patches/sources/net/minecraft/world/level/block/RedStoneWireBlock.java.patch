--- a/net/minecraft/world/level/block/RedStoneWireBlock.java
+++ b/net/minecraft/world/level/block/RedStoneWireBlock.java
@@ -300,7 +_,7 @@
      * Note: Added 'source' argument so as to help determine direction of information flow
      */
     private void updateSurroundingRedstone(Level worldIn, BlockPos pos, BlockState state, @Nullable Orientation orientation, boolean blockAdded) {
-        if (worldIn.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.EIGENCRAFT) {
+        if (worldIn.localConfig().config(pos).redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.EIGENCRAFT) { // Sakura - redstone implementation api
             // since 24w33a the source pos is no longer given, but instead an Orientation parameter
             // when this is not null, it can be used to find the source pos, which the turbo uses
             // to find the direction of information flow
@@ -373,7 +_,7 @@
     protected void onPlace(BlockState state, Level level, BlockPos pos, BlockState oldState, boolean isMoving) {
         if (!oldState.is(state.getBlock()) && !level.isClientSide) {
             // Paper start - optimize redstone - replace call to updatePowerStrength
-            if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+            if (level.localConfig().config(pos).redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Sakura - redstone implementation api
                 level.getWireHandler().onWireAdded(pos, state); // Alternate Current
             } else {
                 this.updateSurroundingRedstone(level, pos, state, null, true); // Vanilla/Eigencraft
@@ -398,7 +_,7 @@
                 }
 
                 // Paper start - optimize redstone - replace call to updatePowerStrength
-                if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+                if (level.localConfig().config(pos).redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Sakura - redstone implementation api
                     level.getWireHandler().onWireRemoved(pos, state); // Alternate Current
                 } else {
                     this.updateSurroundingRedstone(level, pos, state, null, false); // Vanilla/Eigencraft
@@ -429,7 +_,7 @@
         if (!level.isClientSide) {
             // Paper start - optimize redstone (Alternate Current)
             // Alternate Current handles breaking of redstone wires in the WireHandler.
-            if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+            if (level.localConfig().config(pos).redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Sakura - redstone implementation api
                 level.getWireHandler().onWireUpdated(pos, state, orientation);
             } else
                 // Paper end - optimize redstone (Alternate Current)
