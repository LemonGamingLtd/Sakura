--- a/net/minecraft/world/level/ServerExplosion.java
+++ b/net/minecraft/world/level/ServerExplosion.java
@@ -306,6 +_,7 @@
         return (float)missedRays / (float)totalRays;
     }
     // Paper end - collisions optimisations
+    private final boolean consistentRadius; // Sakura - consistent explosion radius
 
     public ServerExplosion(
         ServerLevel level,
@@ -326,6 +_,7 @@
         this.damageSource = damageSource == null ? level.damageSources().explosion(this) : damageSource;
         this.damageCalculator = damageCalculator == null ? this.makeDamageCalculator(source) : damageCalculator;
         this.yield = this.blockInteraction == Explosion.BlockInteraction.DESTROY_WITH_DECAY ? 1.0F / this.radius : 1.0F; // CraftBukkit
+        this.consistentRadius = level.localConfig().config(BlockPos.containing(this.center)).consistentRadius; // Sakura - consistent explosion radius
     }
 
     private ExplosionDamageCalculator makeDamageCalculator(@Nullable Entity entity) {
@@ -415,7 +_,7 @@
 
             ray += 3;
 
-            float power = this.radius * (0.7F + this.level.random.nextFloat() * 0.6F);
+            float power = this.radius * (0.7F + (this.consistentRadius ? 0.7F : this.level.random.nextFloat()) * 0.6F); // Sakura - consistent explosion radius
 
             do {
                 final int blockX = Mth.floor(currX);
@@ -629,6 +_,12 @@
                 .getBlockState(blockPos)
                 .onExplosionHit(this.level, blockPos, this, (itemStack, blockPos1) -> addOrAppendStack(list, itemStack, blockPos1));
         }
+
+        // Sakura start - configure explosions dropping items
+        if (!this.level.sakuraConfig().cannons.explosion.explosionsDropItems) {
+            list.clear();
+        }
+        // Sakura end - configure explosions dropping items
 
         for (ServerExplosion.StackCollector stackCollector : list) {
             Block.popResource(this.level, stackCollector.pos, stackCollector.stack);
