From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nahuel Dolores <contact@nahu.me>
Date: Wed, 12 Feb 2025 18:16:00 +0100
Subject: [PATCH] Allow disabled tripwire redstone emissions


diff --git a/net/minecraft/world/level/block/TripWireBlock.java b/net/minecraft/world/level/block/TripWireBlock.java
index e3f3f127907b43a2cef3e1dbff555422b4a551d9..f6844892cf81f98e861259c551e56da9a322e56c 100644
--- a/net/minecraft/world/level/block/TripWireBlock.java
+++ b/net/minecraft/world/level/block/TripWireBlock.java
@@ -127,7 +127,7 @@ public class TripWireBlock extends Block {
     }
 
     private void updateSource(Level level, BlockPos pos, BlockState state) {
-        if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent adjacent tripwires from updating
+        //if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent adjacent tripwires from updating // Citrus
         for (Direction direction : new Direction[]{Direction.SOUTH, Direction.WEST}) {
             for (int i = 1; i < 42; i++) {
                 BlockPos blockPos = pos.relative(direction, i);
@@ -153,7 +153,7 @@ public class TripWireBlock extends Block {
 
     @Override
     protected void entityInside(BlockState state, Level level, BlockPos pos, Entity entity) {
-        if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent tripwires from detecting collision
+        //if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent tripwires from detecting collision // Citrus
         if (!new io.papermc.paper.event.entity.EntityInsideBlockEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.block.CraftBlock.at(level, pos)).callEvent()) { return; } // Paper - Add EntityInsideBlockEvent
         if (!level.isClientSide) {
             if (!state.getValue(POWERED)) {
@@ -164,7 +164,7 @@ public class TripWireBlock extends Block {
 
     @Override
     protected void tick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
-        if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent tripwire pressed check
+        //if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableTripwireUpdates) return; // Paper - prevent tripwire pressed check // Citrus
         if (level.getBlockState(pos).getValue(POWERED)) {
             this.checkPressed(level, pos);
         }
@@ -225,7 +225,7 @@ public class TripWireBlock extends Block {
 
         if (flag != poweredValue) {
             blockState = blockState.setValue(POWERED, Boolean.valueOf(flag));
-            level.setBlock(pos, blockState, 3);
+            //level.setBlock(pos, blockState, 3);
             this.updateSource(level, pos, blockState);
         }
 
diff --git a/net/minecraft/world/level/block/TripWireHookBlock.java b/net/minecraft/world/level/block/TripWireHookBlock.java
index dd2ceb8fd24281a6dd06084145f387cff55c6cc9..560b59fdecd57654bc7ebac580ba6a78cfc7aeef 100644
--- a/net/minecraft/world/level/block/TripWireHookBlock.java
+++ b/net/minecraft/world/level/block/TripWireHookBlock.java
@@ -220,7 +220,7 @@ public class TripWireHookBlock extends Block {
                     BlockState blockState2 = blockStates[i2];
                     if (blockState2 != null) {
                         BlockState blockState3 = level.getBlockState(blockPos1);
-                        if (blockState3.is(Blocks.TRIPWIRE) || blockState3.is(Blocks.TRIPWIRE_HOOK)) {
+                        if (/*blockState3.is(Blocks.TRIPWIRE) ||*/ blockState3.is(Blocks.TRIPWIRE_HOOK)) { // Citrus
                             level.setBlock(blockPos1, blockState2.trySetValue(ATTACHED, Boolean.valueOf(flag2)), 3);
                         }
                     }
