From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nahuel Dolores <contact@nahu.me>
Date: Wed, 6 Nov 2024 13:27:19 +0100
Subject: [PATCH] Add support for stackable buckets


diff --git a/src/main/java/me/samsuik/sakura/configuration/GlobalConfiguration.java b/src/main/java/me/samsuik/sakura/configuration/GlobalConfiguration.java
index ab790630fe4a95ac0e7139e5d41fd8df3393e738..0594e27f3745f31b64ddc9793ca1b68611379137 100644
--- a/src/main/java/me/samsuik/sakura/configuration/GlobalConfiguration.java
+++ b/src/main/java/me/samsuik/sakura/configuration/GlobalConfiguration.java
@@ -27,6 +27,12 @@ public class GlobalConfiguration extends ConfigurationPart {
     @Setting(Configuration.VERSION_FIELD)
     public int version = CURRENT_VERSION;
 
+    public StackableBuckets stackableBuckets;
+    public class StackableBuckets extends ConfigurationPart {
+        public boolean enabled = true;
+        public int maxBucketStackSize = 16;
+    }
+
     public Messages messages;
     public class Messages extends ConfigurationPart {
         public String durableBlockInteraction = "<dark_gray>(<light_purple>S</light_purple>) <white>This block has <gray><remaining></gray> of <gray><durability>";
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index b0b6bd0fe9c50a237d889e7bdcab290c8424af42..fdfb034df5b535261e50f5a50782bdd90e96b436 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -3230,6 +3230,18 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                         switch (event.getResult()) {
                             case ALLOW:
                             case DEFAULT:
+                                // Sakura start - Add support for stackable spawners
+                                if (me.samsuik.sakura.configuration.GlobalConfiguration.get().stackableBuckets.enabled) {
+                                    if (itemstack.getItem() == Items.LAVA_BUCKET || itemstack.getItem() == Items.WATER_BUCKET || itemstack.getItem() == Items.MILK_BUCKET) {
+                                        if (action == InventoryAction.MOVE_TO_OTHER_INVENTORY) {
+                                            this.player.containerMenu.sendAllDataToRemote();
+                                        } else {
+                                            this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, -1, this.player.inventoryMenu.incrementStateId(), this.player.containerMenu.getCarried()));
+                                            this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.containerMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), this.player.containerMenu.getSlot(packet.getSlotNum()).getItem()));
+                                        }
+                                    }
+                                }
+                                // Sakura end
                                 this.player.containerMenu.clicked(i, packet.getButtonNum(), packet.getClickType(), this.player);
                                 break;
                             case DENY:
diff --git a/src/main/java/net/minecraft/world/item/Items.java b/src/main/java/net/minecraft/world/item/Items.java
index 07315232192f6e09910a028c4643d7f0544c62e3..28225d5af8155008893cbbcafdf8c3f24f121635 100644
--- a/src/main/java/net/minecraft/world/item/Items.java
+++ b/src/main/java/net/minecraft/world/item/Items.java
@@ -1210,14 +1210,14 @@ public class Items {
         "warped_hanging_sign", new HangingSignItem(Blocks.WARPED_HANGING_SIGN, Blocks.WARPED_WALL_HANGING_SIGN, new Item.Properties().stacksTo(16))
     );
     public static final Item BUCKET = registerItem("bucket", new BucketItem(Fluids.EMPTY, new Item.Properties().stacksTo(16)));
-    public static final Item WATER_BUCKET = registerItem("water_bucket", new BucketItem(Fluids.WATER, new Item.Properties().craftRemainder(BUCKET).stacksTo(1)));
-    public static final Item LAVA_BUCKET = registerItem("lava_bucket", new BucketItem(Fluids.LAVA, new Item.Properties().craftRemainder(BUCKET).stacksTo(1)));
+    public static final Item WATER_BUCKET = registerItem("water_bucket", new BucketItem(Fluids.WATER, new Item.Properties().craftRemainder(BUCKET).stacksTo(16))); // Sakura - Add support for stackable buckets
+    public static final Item LAVA_BUCKET = registerItem("lava_bucket", new BucketItem(Fluids.LAVA, new Item.Properties().craftRemainder(BUCKET).stacksTo(16))); // Sakura - Add support for stackable buckets
     public static final Item POWDER_SNOW_BUCKET = registerItem(
         "powder_snow_bucket", new SolidBucketItem(Blocks.POWDER_SNOW, SoundEvents.BUCKET_EMPTY_POWDER_SNOW, new Item.Properties().stacksTo(1))
     );
     public static final Item SNOWBALL = registerItem("snowball", new SnowballItem(new Item.Properties().stacksTo(16)));
     public static final Item LEATHER = registerItem("leather", new Item(new Item.Properties()));
-    public static final Item MILK_BUCKET = registerItem("milk_bucket", new MilkBucketItem(new Item.Properties().craftRemainder(BUCKET).stacksTo(1)));
+    public static final Item MILK_BUCKET = registerItem("milk_bucket", new MilkBucketItem(new Item.Properties().craftRemainder(BUCKET).stacksTo(16))); // Sakura - Add support for stackable buckets
     public static final Item PUFFERFISH_BUCKET = registerItem(
         "pufferfish_bucket",
         new MobBucketItem(
